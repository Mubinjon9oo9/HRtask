import telebot
from telebot import types
import sqlite3
import db as rep
import re

TOKEN = 'YOUR_TELEGRAM_BOT_TOKEN'
bot = telebot.TeleBot("7701481676:AAFg5Lz5lFZ47SFk6qixSwynk9r8SJaHmyE")
questions = [
    # "1. –í–≤–µ–¥–∏—Ç–µ –§–ò–û",
    # "2. –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
    # "3. –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã",
    "1. –ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞?",
    "2. –£–º–µ–µ—à—å –ª–∏ —Ç—ã –æ–±—â–∞—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ª—é–¥—å–º–∏ –ª–µ–≥–∫–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º?",
    "3. –°—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã —Å–µ–±—è –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º?",
    "4. –•–æ—Ç–µ–ª –±—ã —Ç—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π (–≤—Å—Ç—Ä–µ—á–∏ —Å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏, –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã, —Ö–∞–∫–∞—Ç–æ–Ω—ã –∏ —Ç.–ø.)?",
    "5. –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –æ–ø—ã—Ç —É—á–∞—Å—Ç–∏—è –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞—Ö?",
    "6. –ì–æ—Ç–æ–≤ –ª–∏ —Ç—ã —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–ø—Ä–∏–º–µ—Ä–Ω–æ 3‚Äì5 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é)?",
    "7. –ù–∞—Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞ —Ç–µ–º–∞ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –∫–∞—Ä—å–µ—Ä—ã –∏ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏?",
    "8. –ú–æ–∂–µ—à—å –ª–∏ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –≤—É–∑–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏–ª–∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º?",
    "9. –ß—É–≤—Å—Ç–≤—É–µ—à—å –ª–∏ —Ç—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã?",
    "10. –•–æ—á–µ—à—å –ª–∏ —Ç—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å soft skills (–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è, –ª–∏–¥–µ—Ä—Å—Ç–≤–æ, —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ —Ç.–ø.)?"
]

responses = {}
current_question_index = {}

def validate_phone(phone):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º.
    –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ –¥–ª–∏–Ω–∞ –æ—Ç 10 –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤.
    """
    pattern = r'^\d{10,15}$'
    return re.match(pattern, phone) is not None

def validate_email(email):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email.
    """
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return re.match(pattern, email) is not None

@bot.message_handler(commands=['start'])
def start_survey(message):
    user_id = message.chat.id
    rep.add_user_with_empty_values(user_id)
    rep.mark_survey_started(user_id)
    responses[user_id] = 0
    current_question_index[user_id] = 0
    hello_message = """üí¨ –ü—Ä–∏–≤–µ—Ç! üëã 
    \n–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –ø–æ–¥–æ–π–¥—ë—à—å –ª–∏ —Ç—ã –Ω–∞ —Ä–æ–ª—å –ê–º–±–∞—Å—Å–∞–¥–æ—Ä–∞ –∫–∞—Ä—å–µ—Ä—ã? 
    \n–≠—Ç–æ —Ç–≤–æ–π —à–∞–Ω—Å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –ø–æ–º–æ–≥–∞—Ç—å –¥—Ä—É–≥–∏–º —Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä—å–µ—Ä—É –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏! –ü—Ä–æ–π–¥–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç, –∏ –º—ã –≤–º–µ—Å—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è, –≥–æ—Ç–æ–≤ –ª–∏ —Ç—ã –Ω–∞—á–∞—Ç—å —ç—Ç–æ—Ç –ø—É—Ç—å!"""
    bot.send_message(user_id, hello_message)
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton("–û—á–µ–Ω—å —á–∞—Å—Ç–æ", callback_data=f"q1_1")
    btn1 = types.InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞", callback_data=f"q1_2")
    btn2 = types.InlineKeyboardButton("–ü–æ—á—Ç–∏ –Ω–µ —É—á–∞—Å—Ç–≤—É—é", callback_data=f"q1_3")
    markup.add(btn,btn1,btn2)
    bot.send_message(message.chat.id, questions[0], reply_markup=markup)
    # bot.register_next_step_handler(message, saveName)

@bot.message_handler(commands=['export'])
def exportCSV(message):
    rep.export_to_csv()
    with open('responses_export.csv', 'rb') as file:
        bot.send_document(message.chat.id, file)

# @bot.message_handler(func=lambda message: True)
# def handle_response(message):
#     user_id = message.chat.id
#     if user_id not in current_question_index:
#         bot.send_message(user_id, "–í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–ø—Ä–æ—Å–∞.")
#         return

#     # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
#     responses[user_id][questions[current_question_index[user_id]]] = message.text

#     # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
#     current_question_index[user_id] += 1

#     if current_question_index[user_id] < len(questions):
#         bot.send_message(user_id, questions[current_question_index[user_id]])
#     else:
#         # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
#         save_response(user_id, responses[user_id])
#         bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –æ–ø—Ä–æ—Å–µ!")
#         del current_question_index[user_id]
#         del responses[user_id]

def saveName(message):
    rep.update_column_by_name(message.chat.id, "name", message.text)
    bot.send_message(message.chat.id, questions[1])
    bot.register_next_step_handler(message, savePhone)

def savePhone(message):
    phone = message.text
    phone = str(phone).replace("+", "").strip()
    if validate_phone(phone):
        rep.update_column_by_name(message.chat.id, "phone", phone)
        bot.send_message(message.chat.id, questions[2])
        bot.register_next_step_handler(message, saveMail)
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, savePhone)

def saveMail(message):
    email = message.text
    email = str(email).strip()
    if validate_email(email):
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–û—á–µ–Ω—å —á–∞—Å—Ç–æ", callback_data=f"q1_1")
        btn1 = types.InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞", callback_data=f"q1_2")
        btn2 = types.InlineKeyboardButton("–ü–æ—á—Ç–∏ –Ω–µ —É—á–∞—Å—Ç–≤—É—é", callback_data=f"q1_3")
        markup.add(btn,btn1,btn2)
        bot.send_message(message.chat.id, questions[3], reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã —Å–Ω–æ–≤–∞.")
        bot.register_next_step_handler(message, saveMail)

@bot.callback_query_handler(func=lambda callback: True)
def callback_handler(callback):
    bot.edit_message_reply_markup(chat_id=callback.message.chat.id, message_id=callback.message.message_id, reply_markup=None)
    data = str(callback.data)
    if data.__contains__("q1_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=5
            bot.send_message(callback.message.chat.id, "üü¢ –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç! –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–µ–±–µ –∑–Ω–∞–∫–æ–º–∞.")
        elif var == "2":
            responses[callback.message.chat.id] +=2
            bot.send_message(callback.message.chat.id, "üü° –û—Ç–ª–∏—á–Ω–æ, —Ç—ã —É–∂–µ –≤ —Ç–µ–º–µ. –ü–æ–ø—Ä–æ–±—É–π –±—ã—Ç—å —á—É—Ç—å –∞–∫—Ç–∏–≤–Ω–µ–µ!")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ. –£—á–∞—Å—Ç–∏–µ ‚Äî –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –ª–∏–¥–µ—Ä—Å—Ç–≤—É!")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –º–Ω–µ —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è", callback_data=f"q2_1")
        btn1 = types.InlineKeyboardButton("–¢–æ–ª—å–∫–æ —Å —Ç–µ–º–∏, –∫—Ç–æ –º–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω", callback_data=f"q2_2")
        btn2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data=f"q2_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[1], reply_markup=markup)
    elif data.__contains__("q2_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=5
            bot.send_message(callback.message.chat.id, "üü¢ –°—É–ø–µ—Ä! –¢–µ–±–µ —Ç–æ—á–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç —Ä–æ–ª—å –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ –º–µ–∂–¥—É —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏.")
        elif var == "2":
            responses[callback.message.chat.id] +=3
            bot.send_message(callback.message.chat.id, "üü° –ù–µ –±–µ–¥–∞! –≠—Ç–æ –º–æ–∂–Ω–æ –Ω–∞—É—á–∏—Ç—å—Å—è. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –∂–µ–ª–∞–Ω–∏–µ.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ü–æ–ª–µ–∑–Ω—ã–π –Ω–∞–≤—ã–∫, –Ω–æ –≤ —Ä–æ–ª–∏ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–∞ –≤–∞–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—â–∏–π —è–∑—ã–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ –ª—é–¥—å–º–∏.")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –≤—Å–µ–≥–¥–∞ –¥–µ—Ä–∂—É –ø–ª–∞–Ω –≤ –≥–æ–ª–æ–≤–µ", callback_data=f"q3_1")
        btn1 = types.InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞", callback_data=f"q3_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, –≤—Å—ë –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é", callback_data=f"q3_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)        
        bot.send_message(callback.message.chat.id, questions[2], reply_markup=markup)
    elif data.__contains__("q3_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=5
            bot.send_message(callback.message.chat.id, "üü¢ –û—Ç–ª–∏—á–Ω–∞—è –±–∞–∑–∞ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö!")
        elif var == "2":
            responses[callback.message.chat.id] +=3
            bot.send_message(callback.message.chat.id, "üü° –¢—ã –Ω–∞ –ø—É—Ç–∏ –∫ –ø–æ—Ä—è–¥–∫—É. –ü–æ–¥—É–º–∞–π, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –í–∞–∂–Ω–æ —É—á–∏—Ç—å—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å. –≠—Ç–∞ –ø—Ä–∏–≤—ã—á–∫–∞ –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–±–æ—Ç–µ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–∞.  ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –º–Ω–µ —ç—Ç–æ –Ω—Ä–∞–≤–∏—Ç—Å—è", callback_data=f"q4_1")
        btn1 = types.InlineKeyboardButton("–í–æ–∑–º–æ–∂–Ω–æ, –µ—Å–ª–∏ –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ", callback_data=f"q4_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —è –Ω–µ –ª—é–±–ª—é —ç—Ç–æ", callback_data=f"q4_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)        
        bot.send_message(callback.message.chat.id, questions[3], reply_markup=markup)
    elif data.__contains__("q4_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=15
            bot.send_message(callback.message.chat.id, "üü¢ –¢—ã —É–∂–µ –ø–æ—á—Ç–∏ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä! –¢–∞–∫–∏–µ –ª—é–¥–∏ –Ω–∞–º –Ω—É–∂–Ω—ã!")
        elif var == "2":
            responses[callback.message.chat.id] +=7
            bot.send_message(callback.message.chat.id, "üü° –ò–Ω—Ç–µ—Ä–µ—Å ‚Äî –æ—Ç–ª–∏—á–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è. –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å —Å –º–∞–ª–æ–≥–æ.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ú–æ–∂–µ—Ç, –ø—Ä–æ—Å—Ç–æ –µ—â—ë –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª? –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è ‚Äî —ç—Ç–æ —Ü–µ–ª–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ! ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –Ω–µ–¥–∞–≤–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª", callback_data=f"q5_1")
        btn1 = types.InlineKeyboardButton("–ë—ã–ª, –Ω–æ –¥–∞–≤–Ω–æ ", callback_data=f"q5_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç", callback_data=f"q5_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)        
        bot.send_message(callback.message.chat.id, questions[4], reply_markup=markup)
    elif data.__contains__("q5_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=15
            bot.send_message(callback.message.chat.id, "üü¢ –û–ø—ã—Ç –Ω–∞ –≤–µ—Å –∑–æ–ª–æ—Ç–∞! –≠—Ç–æ —Å–µ—Ä—å—ë–∑–Ω—ã–π –ø–ª—é—Å –≤ —Ç–≤–æ—ë–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.")
        elif var == "2":
            responses[callback.message.chat.id] +=7
            bot.send_message(callback.message.chat.id, "üü° –û—Ç–ª–∏—á–Ω–æ! –ó–Ω–∞—á–∏—Ç, —Ç—ã —É–º–µ–µ—à—å –≤–∫–ª—é—á–∞—Ç—å—Å—è –≤ —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥—ã.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ù–∏–∫—Ç–æ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª —Å –æ–ø—ã—Ç–∞. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–∞—á–∞—Ç—å —Å–µ–π—á–∞—Å!")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –≥–æ—Ç–æ–≤", callback_data=f"q6_1")
        btn1 = types.InlineKeyboardButton("–í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–∞–¥–∞—á ", callback_data=f"q6_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ—Ç ", callback_data=f"q6_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[5], reply_markup=markup)
    elif data.__contains__("q6_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=15
            bot.send_message(callback.message.chat.id, "üü¢ –û—Ç–ª–∏—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –≤–æ–≤–ª–µ—á—ë–Ω–Ω–æ—Å—Ç–∏! –ú—ã —Ü–µ–Ω–∏–º —Ç–∞–∫–∏—Ö –ª—é–¥–µ–π.")
        elif var == "2":
            responses[callback.message.chat.id] +=7
            bot.send_message(callback.message.chat.id, "üü° –ì–∏–±–∫–æ—Å—Ç—å ‚Äî —Ö–æ—Ä–æ—à–æ. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –±—ã–ª–æ –º–µ—Å—Ç–æ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ñ–∞–ª—å‚Ä¶ –ù–æ –µ—Å–ª–∏ –≤ –±—É–¥—É—â–µ–º –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å ‚Äî –ø–æ–ø—Ä–æ–±—É–π.  ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", callback_data=f"q7_1")
        btn1 = types.InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", callback_data=f"q7_2")
        btn2 = types.InlineKeyboardButton("–°–æ–≤—Å–µ–º –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ", callback_data=f"q7_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[6], reply_markup=markup)
    elif data.__contains__("q7_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=15
            bot.send_message(callback.message.chat.id, "üü¢ –¢—ã —É–∂–µ –≤ —Ç–µ–º–µ! –≠—Ç–æ –≤–∞–∂–Ω–∞—è —á–µ—Ä—Ç–∞ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–∞.")
        elif var == "2":
            responses[callback.message.chat.id] +=7
            bot.send_message(callback.message.chat.id, "üü° –û—Ç–ª–∏—á–Ω–æ! –ò–Ω—Ç–µ—Ä–µ—Å –º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —á–µ—Ä–µ–∑ –ø—Ä–∞–∫—Ç–∏–∫—É.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–æ–º, —Å—Ç–æ–∏—Ç —Ö–æ—Ç—è –±—ã –Ω–µ–º–Ω–æ–≥–æ ¬´–≤–ª—é–±–∏—Ç—å—Å—è¬ª –≤ —ç—Ç—É —Ç–µ–º—É.  ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º ", callback_data=f"q8_1")
        btn1 = types.InlineKeyboardButton("–í–æ–∑–º–æ–∂–Ω–æ, –µ—Å–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è ", callback_data=f"q8_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —ç—Ç–æ —Å–ª–æ–∂–Ω–æ", callback_data=f"q8_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[7], reply_markup=markup)
    elif data.__contains__("q8_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=5
            bot.send_message(callback.message.chat.id, "üü¢ –¢—ã –≥–æ—Ç–æ–≤ –±—ã—Ç—å –ª–∏—Ü–æ–º –æ—Ç–¥–µ–ª–∞ –∫–∞—Ä—å–µ—Ä—ã!")
        elif var == "2":
            responses[callback.message.chat.id] +=3
            bot.send_message(callback.message.chat.id, "üü° –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ ‚Äî –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É. –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –ü—É–±–ª–∏—á–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è ‚Äî –Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å.  ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, —Å—Ç–∞—Ä–∞—é—Å—å –¥–µ–ª–∞—Ç—å –≤—Å—ë –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ ", callback_data=f"q9_1")
        btn1 = types.InlineKeyboardButton("–ò–Ω–æ–≥–¥–∞", callback_data=f"q9_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —è —Ä–∞–±–æ—Ç–∞—é –æ–¥–∏–Ω ", callback_data=f"q9_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[8], reply_markup=markup)
    elif data.__contains__("q9_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=5
            bot.send_message(callback.message.chat.id, "üü¢ –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚Äî –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—Ö–∞ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥—ã!")
        elif var == "2":
            responses[callback.message.chat.id] +=3
            bot.send_message(callback.message.chat.id, "üü° –•–æ—Ä–æ—à–∏–π —Å—Ç–∞—Ä—Ç. –î–∞–≤–∞–π —Ä–∞—Å—Ç–∏ –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –í –∫–æ–º–∞–Ω–¥–µ –≤–∞–∂–Ω–æ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –æ–±—â–µ–µ –¥–µ–ª–æ.  ")
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("–î–∞, –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –∏ —Ö–æ—á—É —Å—Ç–∞—Ç—å –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–æ–º ", callback_data=f"q10_1")
        btn1 = types.InlineKeyboardButton("–í–æ–∑–º–æ–∂–Ω–æ", callback_data=f"q10_2")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, –º–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ –µ—Å—Ç—å ", callback_data=f"q10_3")
        markup.add(btn)
        markup.add(btn1)
        markup.add(btn2)
        bot.send_message(callback.message.chat.id, questions[9], reply_markup=markup)
    elif data.__contains__("q10_"):
        var = data.split("_")[1]
        if var == "1":
            responses[callback.message.chat.id] +=15
            bot.send_message(callback.message.chat.id, "üü¢ –£—Ä–∞! –¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏ –∫ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º—É —Ä–æ—Å—Ç—É!")
        elif var == "2":
            responses[callback.message.chat.id] +=8
            bot.send_message(callback.message.chat.id, "üü° –≠—Ç–æ —É–∂–µ —à–∞–≥ –≤–ø–µ—Ä—ë–¥. –ñ–¥—ë–º —Ç–µ–±—è –≤ —á–∏—Å–ª–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤!")
        elif var == "3":
            bot.send_message(callback.message.chat.id, "üü° –†–∞–∑–≤–∏—Ç–∏–µ ‚Äî –ø—É—Ç—å –∫ –±–æ–ª—å—à–µ–º—É. –í–æ–∑–º–æ–∂–Ω–æ, –æ–¥–Ω–∞–∂–¥—ã –∑–∞—Ö–æ—á–µ—Ç—Å—è –±–æ–ª—å—à–µ. ")
        finalMessage(callback.message.chat.id)
        
def finalMessage(user_id):
    if responses[user_id]>35:
        final_message = "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –Ω–∞ —Ä–æ–ª—å –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–∞ –∫–∞—Ä—å–µ—Ä—ã! \n–•–æ—á–µ—à—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –¥—Ä—É–≥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Å–≤–æ–π –ø—É—Ç—å?"
        final_message1 = "üëâ –ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥–∞–≤–∞–π –∑–∞—è–≤–∫—É: \nhttps://forms.yandex.ru/cloud/683fd13002848f268513e616/ "
        bot.send_message(user_id, final_message)
        bot.send_message(user_id, final_message1)
        rep.mark_survey_finished(user_id, is_positive=True)  # –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
    else:
        final_message = "‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º —É—á–∞—Å—Ç–∏–µ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∂–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏–µ–º –¥–ª—è –Ω–∞—Å."
        final_message1 = "üöÄ –¢–µ–º –Ω–µ –º–µ–Ω–µ–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ñ–æ—Ä–º—É —Å–Ω–æ–≤–∞ –≤ –±—É–¥—É—â–µ–º, –µ—Å–ª–∏ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∏ –∂–µ–ª–∞–Ω–∏—è –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥."
        bot.send_message(user_id, final_message)
        bot.send_message(user_id, final_message1)
        rep.mark_survey_finished(user_id, is_positive=False) # –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π

def pol():
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(e)
        print("Connection Refused!")
        pol()
pol()